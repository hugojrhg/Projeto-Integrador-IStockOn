{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { retry } from 'rxjs/internal/operators/retry';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProdutoService = /*#__PURE__*/(() => {\n  class ProdutoService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n      this.url = 'http://localhost:8080/';\n      this.httpOptions = {\n        headers: new HttpHeaders({\n          'Content-Type': 'application/json'\n        })\n      };\n    }\n\n    getProdutos() {\n      return this.httpClient.get(this.url + 'produto').pipe(retry(2), catchError(this.handleError));\n    }\n\n    saveProduto(produto) {\n      return this.httpClient.post(this.url + 'produto', JSON.stringify(produto), this.httpOptions).pipe(retry(2), catchError(this.handleError));\n    }\n\n    updateProduto(produto) {\n      return this.httpClient.put(this.url + 'produto' + '/' + produto.id, JSON.stringify(produto), this.httpOptions).pipe(retry(1), catchError(this.handleError));\n    }\n\n    deleteProduto(produto) {\n      return this.httpClient.delete(this.url + 'produto' + '/' + produto.id, this.httpOptions).pipe(retry(1), catchError(this.handleError));\n    }\n\n    getLucro() {\n      return this.httpClient.get(this.url + 'lucro').pipe(retry(2), catchError(this.handleError));\n    }\n\n    handleError(error) {\n      let errorMessage = '';\n\n      if (error.error instanceof ErrorEvent) {\n        // Erro ocorreu no lado do client\n        errorMessage = error.error.message;\n      } else {\n        // Erro ocorreu no lado do servidor\n        errorMessage = `Código do erro: ${error.status}, ` + `menssagem: ${error.message}`;\n      }\n\n      console.log(errorMessage);\n      return throwError(errorMessage);\n    }\n\n  }\n\n  ProdutoService.ɵfac = function ProdutoService_Factory(t) {\n    return new (t || ProdutoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ProdutoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProdutoService,\n    factory: ProdutoService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProdutoService;\n})();","map":null,"metadata":{},"sourceType":"module"}